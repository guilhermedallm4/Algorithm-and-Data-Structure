==11020== Memcheck, a memory error detector==11020== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.==11020== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==11020== Command: ./Gui
==11020== 
Digite o numero de nodos: 5


--PRIMEIRO CENARIO--


6(2(0())26(18()))

A arvore eh AVL!


--SEGUNDO CENARIO--

Primeiro caso: Inserir 15
- Antes de inserir o 15
20(4())
- Depois de inserir o 15
15(4()20())

Segundo caso: Inserir 15
- Antes de inserir o 15
20(4(3()9())26())
- Depois de inserir o 15
9(4(3())20(15()26()))

Terceiro caso: Inserir 15
- Antes de inserir o 15
4(3(2())20(9(7()11())26(21()30())))
- Depois de inserir o 15
9(4(3(2())7())20(11(15())26(21()30())))

Quarto caso: Inserir 8
- Antes de inserir o 8
20(4())
- Depois de inserir o 8
8(4()20())

Quinto caso: Inserir 8
- Antes de inserir o 8
20(4(3()9())26())
- Depois de inserir o 8
9(4(3()8())20(26()))

Sexto caso: Inserir 8
- Antes de inserir o 8
20(4(3(2())9(7()11()))26(21()30()))
- Depois de inserir o 8
9(4(3(2())7(8()))20(11()26(21()30())))

==11020== 
==11020== HEAP SUMMARY:
==11020==     in use at exit: 0 bytes in 0 blocks
==11020==   total heap usage: 47 allocs, 47 frees, 3,128 bytes allocated
==11020== 
==11020== All heap blocks were freed -- no leaks are possible
==11020== 
==11020== For lists of detected and suppressed errors, rerun with: -s
==11020== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

























==11103== Memcheck, a memory error detector
==11103== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11103== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==11103== Command: ./Gui
==11103== 
Digite o numero de nodos: 50


--PRIMEIRO CENARIO--


18(6(2(1()4(3()))12(9(8()11())15(13()16())))29(22(20(19()21())24(23()26(25()27())))32(31(30())37(36(35())39()))))

A arvore eh AVL!


--SEGUNDO CENARIO--

Primeiro caso: Inserir 15
- Antes de inserir o 15
20(4())
- Depois de inserir o 15
15(4()20())

Segundo caso: Inserir 15
- Antes de inserir o 15
20(4(3()9())26())
- Depois de inserir o 15
9(4(3())20(15()26()))

Terceiro caso: Inserir 15
- Antes de inserir o 15
4(3(2())20(9(7()11())26(21()30())))
- Depois de inserir o 15
9(4(3(2())7())20(11(15())26(21()30())))

Quarto caso: Inserir 8
- Antes de inserir o 8
20(4())
- Depois de inserir o 8
8(4()20())

Quinto caso: Inserir 8
- Antes de inserir o 8
20(4(3()9())26())
- Depois de inserir o 8
9(4(3()8())20(26()))

Sexto caso: Inserir 8
- Antes de inserir o 8
20(4(3(2())9(7()11()))26(21()30()))
- Depois de inserir o 8
9(4(3(2())7(8()))20(11()26(21()30())))

==11103== 
==11103== HEAP SUMMARY:
==11103==     in use at exit: 0 bytes in 0 blocks
==11103==   total heap usage: 72 allocs, 72 frees, 3,728 bytes allocated
==11103== 
==11103== All heap blocks were freed -- no leaks are possible
==11103== 
==11103== For lists of detected and suppressed errors, rerun with: -s
==11103== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
